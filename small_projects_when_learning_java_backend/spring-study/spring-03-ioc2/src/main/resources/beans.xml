<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--第一种：通过下标创建-->
    <!--<bean id="user" class="com.zhangyk.pojo.User">-->
        <!--<constructor-arg index="0" value="张云学java"/>-->
    <!--</bean>-->

    <!--第二种：通过参数类型创建
    由于若干个输入参数的类型可能存在相同的情况，虽然会按照顺序赋值，但易混淆，不推荐使用
    -->
    <!--<bean id="user" class="com.zhangyk.pojo.User">-->
        <!--<constructor-arg type="java.lang.String" value="张云2学java"/>-->
    <!--</bean>-->

    <!--第三种：通过参数名创建-->
    <bean id="user" class="com.zhangyk.pojo.User">
        <!--如果传入的参数是对象，这里就用ref属性代替name属性-->
        <constructor-arg name="name" value="张云3学java"/>
    </bean>
    <!--别名：如果添加了别名，我们也可以使用别名获取到这个对象-->
    <alias name="user" alias="userAlias"/>

    <!--
    id:bean的唯一表示符，也就相当于传统java的对象名
    class:bean对象所对应的全限定名：包名+类名
    name:也是别名,而且name可以同时取多个别名(通过空格或逗号分割)。所以之前介绍的alias标签没啥用。
    -->
    <bean id="user2" class="com.zhangyk.pojo.User" name="userT,userZ">
        <property name="name" value="张云学bean属性"/>
    </bean>

</beans>