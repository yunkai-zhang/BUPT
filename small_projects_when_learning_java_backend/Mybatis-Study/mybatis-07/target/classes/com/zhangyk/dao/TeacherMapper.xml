<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.zhangyk.dao.TeacherMapper" >

    <select id="getTeachers" resultType="com.zhangyk.pojo.Teacher">
        select * from teacher;
    </select>


    <!--按结果来嵌套查询-->
    <select id="getTeacherContainingStudents" resultMap="TeacherStudents">
        select s.id sid,s.name sname,t.id tid,t.name tname from teacher t,student s where t.id=#{id} and s.tid=t.id;
    </select>
    <!--type代表查询语句组装后返回的结果类型，该类型应和接口方法指定的返回类型对应-->
    <resultMap id="TeacherStudents" type="com.zhangyk.pojo.Teacher">
        <result property="id" column="tid"/>
        <result property="name" column="tname"/>
        <!--复杂的属性，我们需要单独处理，对象：association，集合：collection；这里老师对象中包含学生集合（一对多），所以用collection
        javaType="" 指定属性的类型
        集合中的泛型信息，我们使用ofType获取
        -->
        <collection property="students" ofType="com.zhangyk.pojo.Student">
            <result property="id" column="sid"/>
            <result property="name" column="sname"/>
            <result property="tid" column="tid"/>
        </collection>

    </resultMap>
</mapper>