<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0">

    <!--配置dispatcherServlet：这个是SpringMVC的核心；官方名称为“前端控制器”，用于“请求分发”-->
    <servlet>
        <servlet-name>springmvc</servlet-name>
        <!--这个类是Spring帮我们写好的-->
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <!--DispatcherServlet要绑定Spring-MVC的配置文件
        Spring-MVC的配置文件其实就是Spring的配置文件，因为Spring包含了很多东西，其中就有SpringMVC-->
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <!--建议以classpath（当前类的路径）写路径-->
            <param-value>classpath:springmvc-servlet.xml</param-value>
        </init-param>
        <!--启动级别：1
        系统一启动，有些内置请求就会被处理。我们想让springmvc这个servlet和服务器一起启动，就让他启动级别为1-->
        <load-on-startup>1</load-on-startup>
    </servlet>
    <!--
    在SpringMVC中，/   /*
    /:只匹配所有的请求，不会去匹配jsp页面
    /*:匹配所有的请求，包括jsp页面。可能导致无线循环。
    一般用 / 就可以
    -->
    <servlet-mapping>
        <servlet-name>springmvc</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>

</web-app>